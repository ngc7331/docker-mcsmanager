name: build
on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: "web"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
          - target: "daemon"
            jdk: "nojdk"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
          - target: "daemon"
            jdk: "21"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
          - target: "daemon"
            jdk: "22"
            platform: "linux/amd64,linux/arm64,linux/riscv64"

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get version
        id: version
        run: |
          echo "VERSION=$(grep -oP '(?<=mcsmanager version: ).*' README.md)" >> $GITHUB_OUTPUT
          if [ "${{ matrix.target }}" = "daemon" ]; then
            if [ "${{ matrix.jdk }}" = "nojdk" ]; then
              TAG_SUFFIX="-nojdk"
              PREINSTALL_JDK_VERSION=""
            else
              TAG_SUFFIX="-jdk${{ matrix.jdk }}"
              PREINSTALL_JDK_VERSION="${{ matrix.jdk }}"
            fi
          fi
          echo "TAG_SUFFIX=${TAG_SUFFIX}" >> $GITHUB_OUTPUT
          echo "PREINSTALL_JDK_VERSION=${PREINSTALL_JDK_VERSION}" >> $GITHUB_OUTPUT
          if [ "$(sed -n -r 's/^JDK_DEFAULT=(.*)/\1/p' buildx.sh)" = "${{ matrix.jdk }}" ]; then
            echo "IS_TAG_SUFFIX_DEFAULT=true" >> $GITHUB_OUTPUT
          else
            echo "IS_TAG_SUFFIX_DEFAULT=false" >> $GITHUB_OUTPUT
          fi

      - name: Build
        uses: ngc7331/actions@docker-build
        with:
          name: mcsmanager-${{ matrix.target }}
          version: ${{ steps.version.outputs.VERSION }}
          suffix: ${{ steps.version.outputs.TAG_SUFFIX }}
          suffix_detailed: ${{ steps.version.outputs.TAG_SUFFIX }}
          is_latest_no_suffix: ${{ steps.version.outputs.IS_TAG_SUFFIX_DEFAULT }}
          file: ./${{ matrix.target }}/Dockerfile
          context: ./${{ matrix.target }}
          platforms: ${{ matrix.platform }}
          build_args: |
            MCSM_VERSION=${{ steps.version.outputs.VERSION }}
            PREINSTALL_JDK_VERSION=${{ steps.version.outputs.PREINSTALL_JDK_VERSION }}
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
