name: build
on:
  push:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: "web"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
          - target: "daemon"
            jdk: "nojdk"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
          - target: "daemon"
            jdk: "8"
            platform: "linux/amd64,linux/arm64"
          - target: "daemon"
            jdk: "11"
            platform: "linux/amd64,linux/arm64"
          - target: "daemon"
            jdk: "17"
            platform: "linux/amd64,linux/arm64"
          - target: "daemon"
            jdk: "21"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
          - target: "daemon"
            jdk: "22"
            platform: "linux/amd64,linux/arm64,linux/riscv64"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get version
        run: |
          echo "VERSION=$(sed -n -r 's/^VERSION=(.*)/\1/p' buildx.sh)" >> $GITHUB_ENV
          if [ "${{ matrix.target }}" = "daemon" ]; then
            if [ "${{ matrix.jdk }}" = "nojdk" ]; then
              TAG_SUFFIX="-nojdk"
            else
              TAG_SUFFIX="-jdk${{ matrix.jdk }}"
            fi
          fi
          echo "TAG_SUFFIX=${TAG_SUFFIX}" >> $GITHUB_ENV
          if [ "$(sed -n -r 's/^JDK_DEFAULT=(.*)/\1/p' buildx.sh)" = "${{ matrix.jdk }}" ]; then
            echo "TAG_SUFFIX_DEFAULT=true" >> $GITHUB_ENV
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ./${{ matrix.target }}/Dockerfile
          context: ${{ matrix.target }}
          build-args: |
            MCSM_VERSION=${{ env.VERSION }}
            JDK_VERSION=${{ matrix.jdk }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ngc7331/mcsmanager-${{ matrix.target }}:latest${{ env.TAG_SUFFIX }}
            ngc7331/mcsmanager-${{ matrix.target }}:${{ env.VERSION }}${{ env.TAG_SUFFIX }}
            ghcr.io/${{ github.repository }}-${{ matrix.target }}:latest${{ env.TAG_SUFFIX }}
            ghcr.io/${{ github.repository }}-${{ matrix.target }}:${{ env.VERSION }}${{ env.TAG_SUFFIX }}

      - name: Tag latest
        run: |
          if [ "${{ env.TAG_SUFFIX_DEFAULT }}" = "true" ]; then
            docker buildx imagetools create \
              -t ngc7331/mcsmanager-daemon:latest \
              -t ngc7331/mcsmanager-daemon:${{ env.VERSION }} \
              -t ghcr.io/${{ github.repository }}-daemon:latest \
              -t ghcr.io/${{ github.repository }}-daemon:${{ env.VERSION }} \
              ngc7331/mcsmanager-daemon:latest${{ env.TAG_SUFFIX }}
          fi
